#pragma once

#include <string>
#include <vector>

#ifdef __APPLE__
    #include <unistd.h>
    #include <pwd.h>
#endif

namespace Config {

// Fetch the directory for document files
#ifdef __APPLE__
    const std::string HOME = std::string(getpwuid(getuid())->pw_dir); // Get home directory on Unix/Linux/MacOS
    const std::string APP_DIR = HOME + "/Library/Application Support/@PROJECT_NAME@/"; // Writing into the .app bundle is not allowed as it is signed
#else
    const std::string APP_DIR = ""; // On other platforms just write into the application directory
#endif

const std::string SHADER_DIR = "shaders/";
const std::string MODEL_DIR = "models/";
const std::string TEXTURES_DIR = "textures/";

// NDEBUG is defined in RELEASE mode
#ifndef NDEBUG
//#define COMPOSE_SHADERS // Uncomment to compose shaders in DEBUG mode
                          // Currently disabled because the #line directive serves better for debugging
#endif
const std::string COMPOSED_SHADER_DIR = "@CMAKE_SOURCE_DIR@/composed/";

const std::vector<std::string> MODEL_FILES = {@MODEL_FILES@};

// Number of frames to average for frame time smoothing
const unsigned int FRAMETIME_SMOOTHING = 60;

}